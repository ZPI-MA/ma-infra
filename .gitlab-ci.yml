stages:
  - setup
  - terraform

variables:
  TF_VAR_aws_access_key: $AWS_ACCESS_KEY_ID
  TF_VAR_aws_secret_key: $AWS_SECRET_ACCESS_KEY
  TF_VAR_aws_region: $AWS_DEFAULT_REGION
  SSH_PRIVATE_KEY: $EC2_SSH_PEM

default:
  image: ubuntu:latest

set_up_files:
  stage: setup
  script:
    # - echo "[default]" > ~/.aws/credentials
    # - echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> ~/.aws/credentials
    # - echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials
    # - ssh-keygen -t rsa -b 4096 -C "franeksu@gmail.com" -f ~/.ssh/id_rsa -N ""
    # - echo "TF_VAR_ssh_public_key=$(cat ~/.ssh/id_rsa.pub)" >> env
    - su -
    - mkdir ~/.ssh/
    - echo $SSH_PRIVATE_KEY > ~/.ssh/id_rsa
  # artifacts:
  #   reports:
  #     dotenv: env
  artifacts:
    paths:
      - ~/.ssh/id_rsa
      - ~/.ssh/id_rsa.pub

# set_up_terraform:
#   stage: setup
#   needs: 
#     - set_up_files
#     artifacts: true
set_up_aws:
  stage: terraform
  needs:
    - job: set_up_files
      artifacts: true
  before_script:
    - apt update && apt install -y wget gpg lsb-release
    - wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
    - gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
    - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/hashicorp.list
    - apt update && apt install -y terraform
    - terraform --version
  script:
    - cd ec2
    - terraform init
    - terraform validate
    - terraform plan
    - terraform apply -auto-approve
  after_script:
    - EC2_PUBLIC_IP="$(terraform output public_ip)"
    - sleep 60
    - ssh ec2-user@$EC2_PUBLIC_IP "echo 'Hello from EC2!'" || terraform destroy -auto-approve
  artifacts:
    reports:
      dotenv: env

# check_ec2_health:
#   stage: terraform
#   script:
#     - sleep 60
#     - ssh ec2-user@$EC2_PUBLIC_IP "echo 'Hello from EC2!'" || terraform destroy -auto-approve