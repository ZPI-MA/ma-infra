stages:
  - terraform

variables:
  TF_VAR_aws_access_key: $AWS_ACCESS_KEY_ID
  TF_VAR_aws_secret_key: $AWS_SECRET_ACCESS_KEY
  TF_VAR_aws_region: $AWS_DEFAULT_REGION
  TF_VAR_gitlab_ssh_public: $GITLAB_SSH_PUBLIC
  TF_VAR_ec2_ssh_private: $EC2_SSH_PRIVATE
  TF_VAR_secrets_ini: $SECRETS_INI
  GITLAB_SSH_PRIVATE: $GITLAB_SSH_PRIVATE

default:
  image: ubuntu:latest

set_up_aws:
  stage: terraform
  needs:
    - job: set_up_files
      artifacts: true
  before_script:
    - apt update && apt install -y wget gpg lsb-release
    - wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
    - gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
    - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/hashicorp.list
    - apt update && apt install -y terraform
    - terraform --version
  script:
    - cd ec2
    - terraform init
    - terraform validate
    - terraform plan
    - terraform apply -auto-approve
  after_script:
    - EC2_PUBLIC_IP="$(terraform output public_ip)"
    - sleep 20
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - ( echo "$GITLAB_SSH_PRIVATE" |base64 -d > /tmp/id_rsa && chmod 0600 /tmp/id_rsa )  &&  ssh-agent bash -c "test -e ~/.ssh || mkdir ~/.ssh; ssh-keyscan $EC2_PUBLIC_IP >> ~/.ssh/known_hosts;ssh-add /tmp/id_rsa;"
    - |
      (ssh -o StrictHostKeyChecking=no -i /tmp/id_rsa ubuntu@$EC2_PUBLIC_IP << 'EOF'
        echo "Hello world from EC2!"
      EOF) || terraform destroy -auto-approve
    # - ssh ubuntu@$EC2_PUBLIC_IP "echo 'Hello from EC2!'" || terraform destroy -auto-approve
